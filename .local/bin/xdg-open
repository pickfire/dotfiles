#!/bin/sh
# Temporary replace xdg-open (HALL OF LAME! - Bad support without desktop environment)
# Usage: xdg-open uri(s) - separated by space

noproxy() {
  [[ $uri =~ .onion/ ]] && return
  http_proxy=''; https_proxy=''; HTTP_PROXY=''; HTTPS_PROXY=''; all_proxy=''; ALL_PROXY=''
}

for uri in $*; do
  case $uri in
    -h) echo "usage: $(basename $0) uri(s) - separated by space"; exit;;

    *.css) st -e sh -c "nvim $uri";;
    *.txt) st -e sh -c "curl -s $uri | ${PAGER:-${VISUAL}}";;
    *.html) [ -n $DISPLAY ] && ${BROWSER:-firefox} "$uri" || w3m "$uri";;

    *.webm|*.mp4|*.ogv) noproxy; ffplay "$uri";;
    *youtube.com/*|*youtu.be/*) noproxy; you-get -p ffplay "$uri";;

    http://*.gif|https://*.gif) [ -n $DISPLAY ] && ${BROWSER:-firefox} "$uri";;

    *.gif) ffplay "$uri";;
    *.jp*g|*.png) [ -n $DISPLAY ] && feh "$uri" || fbi "$uri";;
    *.pdf) [ -n $DISPLAY ] && zathura "$uri" || fbpdf "$ri";;

    http://*|https://*) [ -n $DISPLAY ] && ${BROWSER:-firefox} "$uri" || w3m "$uri";;
    gopher://*) [ $TERM != linux ] && st -e sh -c "lynx $uri" || lynx "$uri";;

    *) /usr/bin/xdg-open "$uri";; # Blame xdg-open just in case anything happens
  esac
done
