#!/bin/sh

#-------------------------------------------------------------
# Windows 10 Guest
#-------------------------------------------------------------

# Installation
# 1. Create the image
#    chattr +C .
#    qemu-img create -f raw win10.raw 10G
# 2. Download windows
# 3. Download virtio (or pacman -S virtio-win)
#    aria2c https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/latest-virtio/virtio-win.iso
# 4. Installation
#    qemu-system-x86_64 -machine type=pc,accel=kvm -m 4G -vga std -soundhw hda \
#      -cpu host,hv_relaxed,hv_spinlocks=0x1fff,hv_vapic,hv_time \
#      -net nic,model=virtio -net user,smb=$HOME -device virtio-balloon -boot order=d \
#      -drive file=win10.img,index=0,media=disk,format=raw,if=virtio,cache=none \
#      -drive file=win10.iso,index=2,media=cdrom -drive file=virtio-win.iso,index=3,media=cdrom
# 5. Drivers
#    - E:\viostor\[your-os]\amd64
#    - E:\Balloon
#    - E:\qxldod
#    - E:\NetKVM

# Running
# 1. Create new bridge
#      sudo ip link add br0 type bridge
# 1. Setup tap network
#      sudo ip tuntap add dev tap0 mode tap
# 2. Run dhcpcd
#      sudo dhcpcd -B br0

if [ "$1" = "win" -a $# -eq 1 ]; then
#	apulse32 qemu-system-x86_64 -enable-kvm -m 4096 -vga std -cpu host -smp 2 \
#		-net nic -net user,smb=$HOME -soundhw hda -device virtio-balloon \
#		-drive file=$HOME/act/img/win10.raw,format=raw,cache=none,if=virtio

  d=$HOME/act/img/win08

  qemu-system-x86_64 -enable-kvm -cpu host,hv_relaxed,hv_spinlocks=0x1fff,hv_vapic,hv_time \
    -machine type=pc,accel=kvm -m 2G -device virtio-balloon -soundhw hda \
    -net nic,model=virtio -net user,smb=$HOME \
    -vga virtio -display sdl,gl=on \
    -drive file=$d/win2k8r2.raw,format=raw,if=virtio,aio=native,cache.direct=on \
    -drive file=$d/virtio.iso,index=3,media=cdrom
    #-net nic,model=virtio -net bridge,br=br0 -net user,smb=$HOME \
    # -drive file=$d/win08.iso,index=2,media=cdrom \
fi

#qemu-system-x86_64 --enable-kvm -smp 2 -m 512M -cpu host -boot order=d \
#  -drive file=win10.raw,if=virtio,format=raw,index=0,media=disk,cache=directsync,aio=native \
#  -drive file=/mnt/img/win10.iso,index=2,media=cdrom \
#  -drive file=/mnt/img/virtio-win-0.1.130.iso,index=3,media=cdrom \
#  -vga qxl -device virtio-serial-pci -spice unix,addr=/tmp/vm_spice.socket,disable-ticketing \
#  -device virtserialport,chardev=spicechannel0,name=com.redhat.spice.0 \
#  -chardev spicevmc,id=spicechannel0,name=vdagent
#spicy --uri="spice+unix:///tmp/vm_spice.socket"
#

#-------------------------------------------------------------
# Arch Linux Guest (Dev) - Console
#-------------------------------------------------------------

if [ "$1" = "arch" -a $# -eq 1 ]; then
	qemu-system-x86_64 --enable-kvm -nographic -smp 2 -m 512M -cpu host \
		-drive file=/home/ivan/act/img/arch-dev.raw,if=virtio,format=raw,cache=none \
		-net nic,model=virtio -net user,hostfwd=::1234-:8080,model=virtio \
		-kernel /boot/arch/vmlinuz-linux -initrd /boot/arch/initramfs-vm.img \
		-append 'root=/dev/vda2 console=ttyS0' \
		-virtfs local,security_model=mapped-xattr,path=/home/ivan/act/vase/crosstabs,mount_tag=host0
fi

#-------------------------------------------------------------
# Shortcut for qemu-system-x86_64-gtk
#-------------------------------------------------------------

if [ "$#" -gt 1 ]; then
	qemu-system-x86_64-gtk $*
fi
